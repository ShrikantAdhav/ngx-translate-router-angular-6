{"version":3,"sources":["null","ng://@gilsdav/ngx-translate-router/lib/localize-router.config.ts","ng://@gilsdav/ngx-translate-router/lib/localize-router.parser.ts","ng://@gilsdav/ngx-translate-router/lib/localize-router.service.ts","ng://@gilsdav/ngx-translate-router/lib/util.ts","ng://@gilsdav/ngx-translate-router/lib/localize-router.pipe.ts","ng://@gilsdav/ngx-translate-router/lib/localize-router-config-loader.ts","ng://@gilsdav/ngx-translate-router/lib/localize-router.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","CacheMechanism","LOCALIZE_ROUTER_FORROOT_GUARD","InjectionToken","RAW_ROUTES","LocalStorage","Cookie","USE_CACHED_LANG","CACHE_MECHANISM","CACHE_NAME","DEFAULT_LANG_FUNCTION","ALWAYS_SET_PREFIX","LocalizeRouterSettings","useCachedLang","alwaysSetPrefix","cacheMechanism","cacheName","defaultLangFunction","Inject","args","decorators","type","LocalizeParser","translate","location","settings","init","routes","selectedLanguage","locales","Promise","resolve","locationLang","getLocationLang","browserLang","_getBrowserLang","defaultLang","_cachedLang","setDefaultLang","children","baseRoute","path","redirectTo","pathMatch","wildcardIndex","findIndex","route","_wildcardRoute","splice","data","_languageRoute","unshift","translateRoutes","toPromise","initChildRoutes","_translateRouteTree","language","_this","Observable","observer","use","subscribe","translations","_translationObject","currentLang","_translateProperty","complete","forEach","indexOf","loadChildren","_loadedConfig","property","prefixLang","routeData","localizeRouter","result","translateRoute","urlPrefix","defineProperty","queryParts","split","Error","map","part","translateText","join","url","queryParamSplit","pathSlices","_returnIfInLocales","getBrowserLang","_cacheWithLocalStorage","_cacheWithCookies","window","localStorage","setItem","getItem","document","cookie","name_1","encodeURIComponent","Date","setTime","getTime","COOKIE_EXPIRY","toUTCString","RegExp","exec","decodeURIComponent","key","fullKey","prefix","res","getParsedResult","TranslateService","Location","ManualParserLoader","_super","tslib_1.__extends","load","then","DummyLocalizeParser","LocalizeRouterService","parser","router","routerEvents","Subject","resetConfig","events","pipe","filter","event","NavigationStart","pairwise","_routeChanged","changeLanguage","lang","extras","useNavigateMethod","console","log","rootSnapshot_1","routerState","snapshot","root","traverseRouteSnapshot","urlSegments","languageSegmentIndex","slice","injectionIndex","navigate","navigateByUrl","firstChild","routeConfig","parseSegmentValue","s","segment","index","_a","_b","previousEvent","currentEvent","previousLang","Router","ActivatedRoute","equals","o1","o2","keySet","t1","isArray","LocalizeRouterPipe","localize","_ref","subscription","transform","lastKey","ngOnDestroy","unsubscribe","query","lastLanguage","_view","state","detectChanges","Pipe","name","pure","ChangeDetectorRef","LocalizeRouterConfigLoader","_compiler","config","factory","moduleType","parentInjector","module","getMethod","injector","get","bind","token","notFoundValue","getResult","ROUTES","apply","Injectable","forwardRef","Compiler","SystemJsNgModuleLoaderConfig","Optional","SystemJsNgModuleLoader","ParserInitializer","appInitializer","generateInitializer","reduce","a","Injector","getAppInitializer","LocalizeRouterModule","forRoot","ngModule","providers","provide","useFactory","provideForRootGuard","deps","SkipSelf","useValue","useClass","multi","NgModuleFactoryLoader","APP_INITIALIZER","forChild","NgModule","imports","CommonModule","RouterModule","TranslateModule","declarations","exports","localizeRouterModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, InjectionToken, Provider } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { LocalizeRouterModule } from './localize-router.module';\n\n/**\n * Guard to make sure we have single initialization of forRoot\n */\nexport const LOCALIZE_ROUTER_FORROOT_GUARD = new InjectionToken<LocalizeRouterModule>('LOCALIZE_ROUTER_FORROOT_GUARD');\n\n/**\n * Static provider for keeping track of routes\n */\nexport const RAW_ROUTES: InjectionToken<Routes[]> = new InjectionToken<Routes[]>('RAW_ROUTES');\n\n/**\n * Type for Caching of default language\n */\nexport type CacheMechanism = 'LocalStorage' | 'Cookie';\n\n/**\n * Namespace for fail proof access of CacheMechanism\n */\nexport namespace CacheMechanism {\n  export const LocalStorage: CacheMechanism = 'LocalStorage';\n  export const Cookie: CacheMechanism = 'Cookie';\n}\n\n/**\n * Boolean to indicate whether to use cached language value\n */\nexport const USE_CACHED_LANG = new InjectionToken<boolean>('USE_CACHED_LANG');\n/**\n * Cache mechanism type\n */\nexport const CACHE_MECHANISM = new InjectionToken<CacheMechanism>('CACHE_MECHANISM');\n/**\n * Cache name\n */\nexport const CACHE_NAME = new InjectionToken<string>('CACHE_NAME');\n\n/**\n * Type for default language function\n * Used to override basic behaviour\n */\nexport type DefaultLanguageFunction = (languages: string[], cachedLang?: string, browserLang?: string) => string;\n\n/**\n * Function for calculating default language\n */\nexport const DEFAULT_LANG_FUNCTION = new InjectionToken<DefaultLanguageFunction>('DEFAULT_LANG_FUNCTION');\n\n/**\n * Boolean to indicate whether prefix should be set for single language scenarios\n */\nexport const ALWAYS_SET_PREFIX = new InjectionToken<boolean>('ALWAYS_SET_PREFIX');\n\n/**\n * Config interface for LocalizeRouter\n */\nexport interface LocalizeRouterConfig {\n  parser?: Provider;\n  useCachedLang?: boolean;\n  cacheMechanism?: CacheMechanism;\n  cacheName?: string;\n  defaultLangFunction?: DefaultLanguageFunction;\n  alwaysSetPrefix?: boolean;\n}\n\nconst LOCALIZE_CACHE_NAME = 'LOCALIZE_DEFAULT_LANGUAGE';\n\nexport class LocalizeRouterSettings implements LocalizeRouterConfig {\n  /**\n   * Settings for localize router\n   */\n  constructor(\n    @Inject(USE_CACHED_LANG) public useCachedLang: boolean = true,\n    @Inject(ALWAYS_SET_PREFIX) public alwaysSetPrefix: boolean = true,\n    @Inject(CACHE_MECHANISM) public cacheMechanism: CacheMechanism = CacheMechanism.LocalStorage,\n    @Inject(CACHE_NAME) public cacheName: string = LOCALIZE_CACHE_NAME,\n    @Inject(DEFAULT_LANG_FUNCTION) public defaultLangFunction: DefaultLanguageFunction = void 0\n  ) {\n  }\n}\n","import { Routes, Route } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { CacheMechanism, LocalizeRouterSettings } from './localize-router.config';\nimport { Inject } from '@angular/core';\n\nconst COOKIE_EXPIRY = 30; // 1 month\n\n/**\n * Abstract class for parsing localization\n */\nexport abstract class LocalizeParser {\n  locales: Array<string>;\n  currentLang: string;\n  routes: Routes;\n  defaultLang: string;\n\n  protected prefix: string;\n\n  private _translationObject: any;\n  private _wildcardRoute: Route;\n  private _languageRoute: Route;\n\n  /**\n   * Loader constructor\n   */\n  constructor(@Inject(TranslateService) private translate: TranslateService,\n    @Inject(Location) private location: Location,\n    @Inject(LocalizeRouterSettings) private settings: LocalizeRouterSettings) {\n  }\n\n  /**\n   * Load routes and fetch necessary data\n   */\n  abstract load(routes: Routes): Promise<any>;\n\n  /**\n * Prepare routes to be fully usable by ngx-translate-router\n * @param routes\n */\n  /* private initRoutes(routes: Routes, prefix = '') {\n    routes.forEach(route => {\n      if (route.path !== '**') {\n        const routeData: any = route.data = route.data || {};\n        routeData.localizeRouter = {};\n        routeData.localizeRouter.fullPath = `${prefix}/${route.path}`;\n        if (route.children && route.children.length > 0) {\n          this.initRoutes(route.children, routeData.localizeRouter.fullPath);\n        }\n      }\n    });\n  } */\n\n\n  /**\n   * Initialize language and routes\n   */\n  protected init(routes: Routes): Promise<any> {\n    let selectedLanguage: string;\n\n    // this.initRoutes(routes);\n    this.routes = routes;\n\n    if (!this.locales || !this.locales.length) {\n      return Promise.resolve();\n    }\n    /** detect current language */\n    const locationLang = this.getLocationLang();\n    const browserLang = this._getBrowserLang();\n\n    if (this.settings.defaultLangFunction) {\n      this.defaultLang = this.settings.defaultLangFunction(this.locales, this._cachedLang, browserLang);\n    } else {\n      this.defaultLang = this._cachedLang || browserLang || this.locales[0];\n    }\n    selectedLanguage = locationLang || this.defaultLang;\n    this.translate.setDefaultLang(this.defaultLang);\n\n    let children: Routes = [];\n    /** if set prefix is enforced */\n    if (this.settings.alwaysSetPrefix) {\n      const baseRoute = { path: '', redirectTo: this.defaultLang, pathMatch: 'full' };\n\n      /** extract potential wildcard route */\n      const wildcardIndex = routes.findIndex((route: Route) => route.path === '**');\n      if (wildcardIndex !== -1) {\n        this._wildcardRoute = routes.splice(wildcardIndex, 1)[0];\n      }\n      children = this.routes.splice(0, this.routes.length, baseRoute);\n    } else {\n      children = [...this.routes]; // shallow copy of routes\n    }\n\n    /** exclude certain routes */\n    for (let i = children.length - 1; i >= 0; i--) {\n      if (children[i].data && children[i].data['skipRouteLocalization']) {\n        if (this.settings.alwaysSetPrefix) {\n          // add directly to routes\n          this.routes.push(children[i]);\n        }\n        children.splice(i, 1);\n      }\n    }\n\n    /** append children routes */\n    if (children && children.length) {\n      if (this.locales.length > 1 || this.settings.alwaysSetPrefix) {\n        this._languageRoute = { children: children };\n        this.routes.unshift(this._languageRoute);\n      }\n    }\n\n    /** ...and potential wildcard route */\n    if (this._wildcardRoute && this.settings.alwaysSetPrefix) {\n      this.routes.push(this._wildcardRoute);\n    }\n\n    /** translate routes */\n    const res = this.translateRoutes(selectedLanguage);\n    return res.toPromise();\n  }\n\n  initChildRoutes(routes: Routes) {\n    this._translateRouteTree(routes);\n    return routes;\n  }\n\n  /**\n   * Translate routes to selected language\n   */\n  translateRoutes(language: string): Observable<any> {\n    return new Observable<any>((observer: Observer<any>) => {\n      this._cachedLang = language;\n      if (this._languageRoute) {\n        this._languageRoute.path = language;\n      }\n\n      this.translate.use(language).subscribe((translations: any) => {\n        this._translationObject = translations;\n        this.currentLang = language;\n\n        if (this._languageRoute) {\n          if (this._languageRoute) {\n            this._translateRouteTree(this._languageRoute.children);\n          }\n          // if there is wildcard route\n          if (this._wildcardRoute && this._wildcardRoute.redirectTo) {\n            this._translateProperty(this._wildcardRoute, 'redirectTo', true);\n          }\n        } else {\n          this._translateRouteTree(this.routes);\n        }\n\n        observer.next(void 0);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * Translate the route node and recursively call for all it's children\n   */\n  private _translateRouteTree(routes: Routes): void {\n    routes.forEach((route: Route) => {\n      if (route.path && route.path !== '**') {\n        this._translateProperty(route, 'path');\n      }\n      if (route.redirectTo) {\n        this._translateProperty(route, 'redirectTo', !route.redirectTo.indexOf('/'));\n      }\n      if (route.children) {\n        this._translateRouteTree(route.children);\n      }\n      if (route.loadChildren && (<any>route)._loadedConfig) {\n        this._translateRouteTree((<any>route)._loadedConfig.routes);\n      }\n    });\n  }\n\n  /**\n   * Translate property\n   * If first time translation then add original to route data object\n   */\n  private _translateProperty(route: Route, property: string, prefixLang?: boolean): void {\n    // set property to data if not there yet\n    const routeData: any = route.data = route.data || {};\n    if (!routeData.localizeRouter) {\n      routeData.localizeRouter = {};\n    }\n    if (!routeData.localizeRouter[property]) {\n      routeData.localizeRouter[property] = (<any>route)[property];\n    }\n\n    const result = this.translateRoute(routeData.localizeRouter[property]);\n    (<any>route)[property] = prefixLang ? `/${this.urlPrefix}${result}` : result;\n  }\n\n  get urlPrefix() {\n    return this.settings.alwaysSetPrefix || this.currentLang !== this.defaultLang ? this.currentLang : '';\n  }\n\n  /**\n   * Translate route and return observable\n   */\n  translateRoute(path: string): string {\n    const queryParts = path.split('?');\n    if (queryParts.length > 2) {\n      throw Error('There should be only one query parameter block in the URL');\n    }\n    const pathSegments = queryParts[0].split('/');\n\n    /** collect observables  */\n    return pathSegments\n      .map((part: string) => part.length ? this.translateText(part) : part)\n      .join('/') +\n      (queryParts.length > 1 ? `?${queryParts[1]}` : '');\n  }\n\n  /**\n   * Get language from url\n   */\n  getLocationLang(url?: string): string {\n    const queryParamSplit = (url || this.location.path()).split('?');\n    let pathSlices: string[] = [];\n    if (queryParamSplit.length > 0) {\n      pathSlices = queryParamSplit[0].split('/');\n    }\n    if (pathSlices.length > 1 && this.locales.indexOf(pathSlices[1]) !== -1) {\n      return pathSlices[1];\n    }\n    if (pathSlices.length && this.locales.indexOf(pathSlices[0]) !== -1) {\n      return pathSlices[0];\n    }\n    return null;\n  }\n\n  /**\n   * Get user's language set in the browser\n   */\n  private _getBrowserLang(): string {\n    return this._returnIfInLocales(this.translate.getBrowserLang());\n  }\n\n  /**\n   * Get language from local storage or cookie\n   */\n  private get _cachedLang(): string {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.LocalStorage) {\n      return this._cacheWithLocalStorage();\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.Cookie) {\n      return this._cacheWithCookies();\n    }\n  }\n\n  /**\n   * Save language to local storage or cookie\n   */\n  private set _cachedLang(value: string) {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.LocalStorage) {\n      this._cacheWithLocalStorage(value);\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.Cookie) {\n      this._cacheWithCookies(value);\n    }\n  }\n\n  /**\n   * Cache value to local storage\n   */\n  private _cacheWithLocalStorage(value?: string): string {\n    if (typeof window === 'undefined' || typeof window.localStorage === 'undefined') {\n      return;\n    }\n    try {\n      if (value) {\n        window.localStorage.setItem(this.settings.cacheName, value);\n        return;\n      }\n      return this._returnIfInLocales(window.localStorage.getItem(this.settings.cacheName));\n    } catch (e) {\n      // weird Safari issue in private mode, where LocalStorage is defined but throws error on access\n      return;\n    }\n  }\n\n  /**\n   * Cache value via cookies\n   */\n  private _cacheWithCookies(value?: string): string {\n    if (typeof document === 'undefined' || typeof document.cookie === 'undefined') {\n      return;\n    }\n    try {\n      const name = encodeURIComponent(this.settings.cacheName);\n      if (value) {\n        const d: Date = new Date();\n        d.setTime(d.getTime() + COOKIE_EXPIRY * 86400000); // * days\n        document.cookie = `${name}=${encodeURIComponent(value)};expires=${d.toUTCString()}`;\n        return;\n      }\n      const regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n      const result = regexp.exec(document.cookie);\n      return decodeURIComponent(result[1]);\n    } catch (e) {\n      return; // should not happen but better safe than sorry\n    }\n  }\n\n  /**\n   * Check if value exists in locales list\n   */\n  private _returnIfInLocales(value: string): string {\n    if (value && this.locales.indexOf(value) !== -1) {\n      return value;\n    }\n    return null;\n  }\n\n  /**\n   * Get translated value\n   */\n  private translateText(key: string): string {\n    if (!this._translationObject) {\n      return key;\n    }\n    const fullKey = this.prefix + key;\n    const res = this.translate.getParsedResult(this._translationObject, fullKey);\n    return res !== fullKey ? res : key;\n  }\n}\n\n/**\n * Manually set configuration\n */\nexport class ManualParserLoader extends LocalizeParser {\n\n  /**\n   * CTOR\n   */\n  constructor(translate: TranslateService, location: Location, settings: LocalizeRouterSettings,\n    locales: string[] = ['en'], prefix: string = 'ROUTES.') {\n    super(translate, location, settings);\n    this.locales = locales;\n    this.prefix = prefix || '';\n  }\n\n  /**\n   * Initialize or append routes\n   */\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n\nexport class DummyLocalizeParser extends LocalizeParser {\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n","import { Inject } from '@angular/core';\nimport { Router, NavigationStart, ActivatedRouteSnapshot, NavigationExtras, UrlSegment, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, pairwise } from 'rxjs/operators';\n\nimport { LocalizeParser } from './localize-router.parser';\nimport { LocalizeRouterSettings } from './localize-router.config';\n\n/**\n * Localization service\n * modifyRoutes\n */\nexport class LocalizeRouterService {\n  routerEvents: Subject<string>;\n\n  /**\n   * CTOR\n   */\n  constructor(\n      @Inject(LocalizeParser) public parser: LocalizeParser,\n      @Inject(LocalizeRouterSettings) public settings: LocalizeRouterSettings,\n      @Inject(Router) private router: Router,\n      @Inject(ActivatedRoute) private route: ActivatedRoute\n    ) {\n      this.routerEvents = new Subject<string>();\n  }\n\n  /**\n   * Start up the service\n   */\n  init(): void {\n    this.router.resetConfig(this.parser.routes);\n    // subscribe to router events\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(this._routeChanged());\n  }\n\n  /**\n   * Change language and navigate to translated route\n   */\n  changeLanguage(lang: string, extras?: NavigationExtras, useNavigateMethod?: boolean): void {\n    if (this.route) {\n      console.log(this.route);\n    }\n    if (lang !== this.parser.currentLang) {\n      const rootSnapshot: ActivatedRouteSnapshot = this.router.routerState.snapshot.root;\n\n      this.parser.translateRoutes(lang).subscribe(() => {\n\n        let url = this.traverseRouteSnapshot(rootSnapshot);\n        url = this.translateRoute(url) as string;\n\n        if (!this.settings.alwaysSetPrefix) {\n          let urlSegments = url.split('/');\n          const languageSegmentIndex = urlSegments.indexOf(this.parser.currentLang);\n          // If the default language has no prefix make sure to remove and add it when necessary\n          if (this.parser.currentLang === this.parser.defaultLang) {\n            // Remove the language prefix from url when current language is the default language\n            if (languageSegmentIndex === 0 || (languageSegmentIndex === 1 && urlSegments[0] === '')) {\n              // Remove the current aka default language prefix from the url\n              urlSegments = urlSegments.slice(0, languageSegmentIndex).concat(urlSegments.slice(languageSegmentIndex + 1));\n            }\n          } else {\n            // When coming from a default language it's possible that the url doesn't contain the language, make sure it does.\n            if (languageSegmentIndex === -1) {\n              // If the url starts with a slash make sure to keep it.\n              const injectionIndex = urlSegments[0] === '' ? 1 : 0;\n              urlSegments = urlSegments.slice(0, injectionIndex).concat(this.parser.currentLang, urlSegments.slice(injectionIndex));\n            }\n          }\n          url = urlSegments.join('/');\n        }\n\n        this.router.resetConfig(this.parser.routes);\n        if (useNavigateMethod) {\n          this.router.navigate([url], extras);\n        } else {\n          this.router.navigateByUrl(url, extras);\n        }\n      });\n    }\n  }\n\n  /**\n   * Traverses through the tree to assemble new translated url\n   */\n  private traverseRouteSnapshot(snapshot: ActivatedRouteSnapshot): string {\n\n    if (snapshot.firstChild && snapshot.routeConfig) {\n      return `${this.parseSegmentValue(snapshot)}/${this.traverseRouteSnapshot(snapshot.firstChild)}`;\n    } else if (snapshot.firstChild) {\n      return this.traverseRouteSnapshot(snapshot.firstChild);\n    } else {\n      return this.parseSegmentValue(snapshot);\n    }\n\n    /* if (snapshot.firstChild && snapshot.firstChild.routeConfig && snapshot.firstChild.routeConfig.path) {\n      if (snapshot.firstChild.routeConfig.path !== '**') {\n        return this.parseSegmentValue(snapshot) + '/' + this.traverseRouteSnapshot(snapshot.firstChild);\n      } else {\n        return this.parseSegmentValue(snapshot.firstChild);\n      }\n    }\n    return this.parseSegmentValue(snapshot); */\n  }\n\n  /**\n   * Extracts new segment value based on routeConfig and url\n   */\n  private parseSegmentValue(snapshot: ActivatedRouteSnapshot): string {\n    if (snapshot.data.localizeRouter) {\n      const path = snapshot.data.localizeRouter.path;\n      const subPathSegments = path.split('/');\n      return subPathSegments.map((s: string, i: number) => s.indexOf(':') === 0 ? snapshot.url[i].path : s).join('/');\n    } else {\n      return '';\n    }\n    /* if (snapshot.routeConfig) {\n      if (snapshot.routeConfig.path === '**') {\n        return snapshot.url.filter((segment: UrlSegment) => segment.path).map((segment: UrlSegment) => segment.path).join('/');\n      } else {\n        const subPathSegments = snapshot.routeConfig.path.split('/');\n        return subPathSegments.map((s: string, i: number) => s.indexOf(':') === 0 ? snapshot.url[i].path : s).join('/');\n      }\n    }\n    return ''; */\n  }\n\n  /**\n   * Translate route to current language\n   * If new language is explicitly provided then replace language part in url with new language\n   */\n  translateRoute(path: string | any[]): string | any[] {\n    if (typeof path === 'string') {\n      const url = this.parser.translateRoute(path);\n      return !path.indexOf('/') ? `/${this.parser.urlPrefix}${url}` : url;\n    }\n    // it's an array\n    const result: any[] = [];\n    (path as Array<any>).forEach((segment: any, index: number) => {\n      if (typeof segment === 'string') {\n        const res = this.parser.translateRoute(segment);\n        if (!index && !segment.indexOf('/')) {\n          result.push(`/${this.parser.urlPrefix}${res}`);\n        } else {\n          result.push(res);\n        }\n      } else {\n        result.push(segment);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Event handler to react on route change\n   */\n  private _routeChanged(): (eventPair: [NavigationStart, NavigationStart]) => void {\n    return ([previousEvent, currentEvent]: [NavigationStart, NavigationStart]) => {\n      const previousLang = this.parser.getLocationLang(previousEvent.url) || this.parser.defaultLang;\n      const currentLang = this.parser.getLocationLang(currentEvent.url) || this.parser.defaultLang;\n\n      if (currentLang !== previousLang) {\n        this.parser.translateRoutes(currentLang).subscribe(() => {\n          this.router.resetConfig(this.parser.routes);\n          // Fire route change event\n          this.routerEvents.next(currentLang);\n        });\n      }\n    };\n  }\n}\n","/**\n * Compare if two objects are same\n */\nexport function equals(o1: any, o2: any): boolean {\n  if (o1 === o2) {\n    return true;\n  }\n  if (o1 === null || o2 === null) {\n    return false;\n  }\n  if (o1 !== o1 && o2 !== o2) {\n    return true; // NaN === NaN\n  }\n  const t1 = typeof o1,\n    t2 = typeof o2;\n  let length: number,\n    key: any,\n    keySet: any;\n\n  if (t1 === t2 && t1 === 'object') {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) {\n        return false;\n      }\n      if ((length = o1.length) === o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (o1.hasOwnProperty(key)) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n          keySet[key] = true;\n        }\n      }\n      for (key in o2) {\n        if (o2.hasOwnProperty(key)) {\n          if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\n","import { PipeTransform, Pipe, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { Subscription } from 'rxjs';\nimport { equals } from './util';\n\nconst VIEW_DESTROYED_STATE = 128;\n\n@Pipe({\n  name: 'localize',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class LocalizeRouterPipe implements PipeTransform, OnDestroy {\n  private value: string | any[] = '';\n  private lastKey: string | any[];\n  private lastLanguage: string;\n  private subscription: Subscription;\n\n  /**\n   * CTOR\n   */\n  constructor(private localize: LocalizeRouterService, private _ref: ChangeDetectorRef) {\n    this.subscription = this.localize.routerEvents.subscribe(() => {\n      this.transform(this.lastKey);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Transform current url to localized one\n   */\n  transform(query: string | any[]): string | any[] {\n    if (!query || query.length === 0 || !this.localize.parser.currentLang) {\n      return query;\n    }\n    if (equals(query, this.lastKey) && equals(this.lastLanguage, this.localize.parser.currentLang)) {\n      return this.value;\n    }\n    this.lastKey = query;\n    this.lastLanguage = this.localize.parser.currentLang;\n\n    /** translate key and update values */\n    this.value = this.localize.translateRoute(query);\n    this.lastKey = query;\n    // if view is already destroyed, ignore firing change detection\n    if ((<any> this._ref)._view.state & VIEW_DESTROYED_STATE) {\n      return this.value;\n    }\n    this._ref.detectChanges();\n    return this.value;\n  }\n}\n","import { ROUTES } from '@angular/router';\nimport {\n  SystemJsNgModuleLoader, NgModuleFactory, Injector,\n  SystemJsNgModuleLoaderConfig, Optional, Compiler, Injectable, Inject, forwardRef\n} from '@angular/core';\nimport { LocalizeParser } from './localize-router.parser';\n\n/**\n * Extension of SystemJsNgModuleLoader to enable localization of route on lazy load\n */\n@Injectable()\nexport class LocalizeRouterConfigLoader extends SystemJsNgModuleLoader {\n\n  constructor(@Inject(forwardRef(() => LocalizeParser)) private localize: LocalizeParser,\n    _compiler: Compiler, @Optional() config?: SystemJsNgModuleLoaderConfig) {\n      super(_compiler, config);\n  }\n\n  /**\n   * Extend load with custom functionality\n   */\n  load(path: string): Promise<NgModuleFactory<any>> {\n    return super.load(path).then((factory: NgModuleFactory<any>) => {\n      return {\n        moduleType: factory.moduleType,\n        create: (parentInjector: Injector) => {\n          const module = factory.create(parentInjector);\n          const getMethod = module.injector.get.bind(module.injector);\n\n          module.injector['get'] = (token: any, notFoundValue: any) => {\n            const getResult = getMethod(token, notFoundValue);\n\n            if (token === ROUTES) {\n              // translate lazy routes\n              return this.localize.initChildRoutes([].concat(...getResult));\n            } else {\n              return getResult;\n            }\n          };\n          return module;\n        }\n      };\n    });\n  }\n}\n","import {\n  NgModule, ModuleWithProviders, APP_INITIALIZER, Optional, SkipSelf,\n  Injectable, Injector, NgModuleFactoryLoader\n} from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { DummyLocalizeParser, LocalizeParser } from './localize-router.parser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalizeRouterPipe } from './localize-router.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ALWAYS_SET_PREFIX,\n  CACHE_MECHANISM, CACHE_NAME, DEFAULT_LANG_FUNCTION, LOCALIZE_ROUTER_FORROOT_GUARD, LocalizeRouterConfig, LocalizeRouterSettings,\n  RAW_ROUTES,\n  USE_CACHED_LANG\n} from './localize-router.config';\nimport { LocalizeRouterConfigLoader } from './localize-router-config-loader';\n\n@Injectable()\nexport class ParserInitializer {\n  parser: LocalizeParser;\n  routes: Routes;\n\n  /**\n   * CTOR\n   */\n  constructor(private injector: Injector) {\n  }\n\n  appInitializer(): Promise<any> {\n    const res = this.parser.load(this.routes);\n    res.then(() => {\n      const localize: LocalizeRouterService = this.injector.get(LocalizeRouterService);\n      localize.init();\n    });\n\n    return res;\n  }\n\n  generateInitializer(parser: LocalizeParser, routes: Routes[]): () => Promise<any> {\n    this.parser = parser;\n    this.routes = routes.reduce((a, b) => a.concat(b));\n    return this.appInitializer;\n  }\n}\n\nexport function getAppInitializer(p: ParserInitializer, parser: LocalizeParser, routes: Routes[]): any {\n  return p.generateInitializer(parser, routes).bind(p);\n}\n\n@NgModule({\n  imports: [CommonModule, RouterModule, TranslateModule],\n  declarations: [LocalizeRouterPipe],\n  exports: [LocalizeRouterPipe]\n})\nexport class LocalizeRouterModule {\n\n  static forRoot(routes: Routes, config: LocalizeRouterConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: LOCALIZE_ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[LocalizeRouterModule, new Optional(), new SkipSelf()]]\n        },\n        { provide: USE_CACHED_LANG, useValue: config.useCachedLang },\n        { provide: ALWAYS_SET_PREFIX, useValue: config.alwaysSetPrefix },\n        { provide: CACHE_NAME, useValue: config.cacheName },\n        { provide: CACHE_MECHANISM, useValue: config.cacheMechanism },\n        { provide: DEFAULT_LANG_FUNCTION, useValue: config.defaultLangFunction },\n        LocalizeRouterSettings,\n        config.parser || { provide: LocalizeParser, useClass: DummyLocalizeParser },\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        },\n        LocalizeRouterService,\n        ParserInitializer,\n        { provide: NgModuleFactoryLoader, useClass: LocalizeRouterConfigLoader },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: getAppInitializer,\n          deps: [ParserInitializer, LocalizeParser, RAW_ROUTES]\n        }\n      ]\n    };\n  }\n\n  static forChild(routes: Routes): ModuleWithProviders {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        }\n      ]\n    };\n  }\n}\n\nexport function provideForRootGuard(localizeRouterModule: LocalizeRouterModule): string {\n  if (localizeRouterModule) {\n    throw new Error(\n      `LocalizeRouterModule.forRoot() called twice. Lazy loaded modules should use LocalizeRouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n"]}